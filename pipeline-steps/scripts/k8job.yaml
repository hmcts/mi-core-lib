name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

trigger: none
pr: none


parameters:
  - name: integrationEnv
    displayName: Integration Environment
    type: string
    default: 'default'
    values:
      - 'sbox'
      - 'dev'
      - 'test'
      - 'ithc'
      - 'stg'
      - 'default'
variables:
  #  group: pipeline-env-variables

  # environment: 'stg' #Use test and promoting to stg until prod is ready
  # env.upper: 'STG'
  azure.subscription.endpoint: 'DTS-SHAREDSERVICES-$(env.upper)'
  azure.aks.cluster: 'ss_aks_$(environment)'
  azureAksResourceGroup:  'ss_$(environment)_kubernetes_resource_group'
  azureAksCluster: 'ss_aks_$(environment)'
stages:
- stage: Execk8
  jobs:
    - job: Execk8
      pool: hmcts-ss-${{ parameters.integrationEnv }}

      variables:
        env: ${{ parameters.integrationEnv }}
      steps:
        - task: AzureCLI@1
          displayName: "Clean deployments"
          inputs:
            azureSubscription: $(azure.subscription.endpoint)
            scriptLocation: "inlineScript"
            inlineScript: |
              az --version
              # kubectl config set-context --current --namespace=$(TARGET_NAMESPACE)
              # kubectl create job --from=cronjob/data-extractor-job $(JOB_NAME)
        # - task: AzureCLI@1
        #   displayName: "AKS list identities"
        #   inputs:
        #     azureSubscription: $(azure.subscription.endpoint)
        #     scriptLocation: "inlineScript"
        #     inlineScript: kubectl delete pod $(TARGET_POD) -n $(TARGET_NAMESPACE)
        #   env:
        #       K8_POD: $(TARGET_POD)
        #       K8_NAMESPCE: $(TARGET_NAMESPACE)
        # - task: AzureCLI@1
        #   displayName: "AKS list identity bindings"
        #   inputs:
        #     azureSubscription: $(azure.subscription.endpoint)
        #     scriptLocation: "inlineScript"
        #     inlineScript: kubectl get AzureIdentityBinding --all-namespaces -o yaml
        # - task: AzureCLI@1
        #   displayName: "AKS get assigned identities"
        #   inputs:
        #     azureSubscription: $(azure.subscription.endpoint)
        #     scriptLocation: "inlineScript"
        #     inlineScript: kubectl get AzureAssignedIdentities --all-namespaces -o yaml
        # - task: AzureCLI@1
        #   displayName: "AKS execute job"
        #   inputs:
        #     azureSubscription: $(azure.subscription.endpoint)
        #     scriptLocation: "inlineScript"
        #     inlineScript: |
        #       kubectl get cronjobs -n mi
        #       kubectl create job --from=cronjob/data-extractor-test-job  data-extractor-test-job-test-job-manual-$(Build.BuildId) -n mi
              # kubectl create job --from=cronjob/mi-integration-service-test-job  mi-integration-service-test-job-manual-$(Build.BuildId) -n mi
              # kubectl create job --from=cronjob/mi-extraction-service-test-job  mi-extraction-service-test-job-manual-$(Build.BuildId) -n mi
              # kubectl create job --from=cronjob/mi-staging-service-test-job  mi-staging-service-test-job-manual-$(Build.BuildId) -n mi


