name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

parameters:
  - name: env
    displayName: Environment to deploy
    type: string
    default: sbox
    values:
      - sbox
      - dev
      - test
      - stg
      - ithc
      - prod
  - name: task
    displayName: Secret utility task to run. Set secret values with the secret_value variable.
    type: string
    default: check_secret_sameness
    values:
      - check_secret_sameness
      - list_secret_versions
      - find_substring_in_secret
      - append_to_secret_value
      - replace_secret_substring
      - restore_secret_version
  - name: secretName
    displayName: Secret name get value from vault.
    type: string
  - name: secretNameToSet
    displayName: Secret name to set in vault for replace secret.
    type: string
    default: "placeholder"
  - name: valueToFindOrReplace
    displayName: Value to find or replace.
    type: string
    default: "v11"
  - name: valueReplace
    displayName: Value to replace with.
    type: string
    default: "v15"
  - name: secretVersion
    displayName: Secret version for restore.
    type: string
    default: "placeholder"

trigger: none
pr: none

stages:
  - ${{ if eq(parameters.task, 'check_secret_sameness')}}:
    - stage: CheckAzureVaultSecrets
      jobs:
        - job: 'CheckAzureVaultSecrets_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-check-secret.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
                secretValue: $(secret_value)
  - ${{ if eq(parameters.task, 'list_secret_versions')}}:
    - stage: ListAzureVaultSecretVersions
      jobs:
        - job: 'ListAzureVaultSecretVersions_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-secret-list-versions.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
  - ${{ if eq(parameters.task, 'find_substring_in_secret')}}:
    - stage: FindSubstringInVaultSecret
      jobs:
        - job: 'FindSubstringInVaultSecret_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-secret-find-substring.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
                valueToFindOrReplace: ${{ parameters.valueToFindOrReplace }}
  - ${{ if eq(parameters.task, 'append_to_secret_value')}}:
    - stage: AppendToAzureVaultSecret
      jobs:
        - job: 'AppendToAzureVaultSecret_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-append-secret.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
                appendValue: $(secret_value)
  - ${{ if eq(parameters.task, 'replace_secret_substring')}}:
    - stage: ReplaceSecretString
      jobs:
        - job: 'ReplaceSecretString_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-replace-secret-substring.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
                secretNameToSet: ${{ parameters.secretNameToSet }}
                valueToFindOrReplace: ${{ parameters.valueToFindOrReplace }}
                valueReplace: ${{ parameters.valueReplace }}
  - ${{ if eq(parameters.task, 'restore_secret_version')}}:
    - stage: RestoreSecretVersion
      jobs:
        - job: 'RestoreSecretVersion_${{ parameters.env }}'
          pool: hmcts-ss-${{ parameters.env }}
          steps:
            - template: ../templates/steps/vault-restore-secret-version.yaml
              parameters:
                azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
                azureVault: 'mi-vault-${{ parameters.env }}'
                secretName: ${{ parameters.secretName }}
                secretVersion: ${{ parameters.secretVersion }}
