name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

parameters:
  - name: env
    displayName: Environment to deploy
    type: string
    default: sbox
    values:
      - sbox
      - dev
      - test
      - stg
      - ithc
      - prod
  - name: secretName
    displayName: Secret name in vault
    type: String
  - name: secretValue
    displayName: Secrect value in group
    type: String

trigger: none
pr: none

stages:
  - stage: DeployAzureVaultSecrets
    jobs:
      - job: 'DeployAzureVaultSecrets_${{ parameters.env }}'
        pool: hmcts-ss-${{ parameters.env }}
        variables:
          - group: 'mi-env-${{ parameters.env }}'
        steps:
          - bash:
            echo "##vso[task.setvariable variable=Secrect_name_in_vault;issecret=true]${{parameters.secretName}}"
          name: SetSecret
          - bash:
            echo "##vso[task.setvariable variable=Secrect_value_in_group;issecret=true]${{parameters.secretValue}}"
          name: SetSecret2
          - bash: 
            echo "##vso[task.setvariable variable=secretValue;issecret=true]
          - template: ../templates/steps/vault-upload.yaml
            parameters:
              azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-${{ upper(parameters.env) }}'
              azureVault: 'mi-vault-${{ parameters.env }}'
              keyMapping:
                - secret_name: ${{ parameters.secretName }}
                  varValue: ${{ parameters.secretValue }}