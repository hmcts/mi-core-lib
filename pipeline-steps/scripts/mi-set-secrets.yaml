name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

parameters:
  - name: repository
    displayName: Name of ACR Repository
    type: string
    default: mi/azure-functions

variables:
  azureSubscriptionEndpoint: 'DTS-SHAREDSERVICES-PROD'

trigger: none
pr: none

stages:
  - stage: CleanupAcr
    jobs:
      - job: 'CleanupSdsHmctsPublicAcr'
        pool:
          vmImage: 'Ubuntu-latest'
        steps:
          - task: AzureCLI@1
            displayName: "ACR Login"
            inputs:
              azureSubscription: $(azureSubscriptionEndpoint)
              scriptLocation: "inlineScript"
              inlineScript: |
                az acr login --name sdshmctspublic
          - task: AzureCLI@1
            displayName: "Cleanup ACR Repository"
            inputs:
              azureSubscription: $(azureSubscriptionEndpoint)
              scriptLocation: "inlineScript"
              inlineScript: |
                declare -A tagMap=()
                tagsList=$(az acr repository show-tags --name sdshmctspublic --repository "${{ parameters.repository }}" --orderby time_desc --output tsv)
                while IFS= read -r tag; do
                  if [[ $tag == pr-* ]]; then
                    tagPrefix=$(echo "$tag" | cut -d- -f-2);
                  else
                    tagPrefix=$(echo "$tag" | cut -d- -f-1);
                  fi
                  if [[ "${tagMap[$tagPrefix]+exists}" ]]; then
                    tagMap[$tagPrefix]=$(( ${tagMap[$tagPrefix]} + 1));
                  else
                    tagMap[$tagPrefix]=1;
                  fi
                  # Keep only latest 3 images. --orderby time_desc ensures the older images are processed later.
                  if [[ ${tagMap[$tagPrefix]} -gt 3 ]]; then
                    echo "Removing $tag from ${{ parameters.repository }}.";
                    az acr repository delete --name sdshmctspublic --image "${{ parameters.repository }}:$tag" --yes
                  else
                    echo "Recent image. Skipping deletion for $tag from ${{ parameters.repository }}.";
                  fi
                done <<< "$tagsList"