parameters:
- name: subscriptionEndpoint
  type: string
- name: adfName
  type: string
  default: ''
- name: resourceGroup
  type: string
  default: mi-$(environment)-rg
- name: keyvaultName
  type: string
  default: mi-vault-$(environment)
- name: ssKeyvaultName
  type: string
  default: ss-vault-$(environment)
- name: agentPool
  type: string
  default: hmcts-ss-$(environment)
- name: azureKeyMapping
  type: object
  default: {}
- name: envMapping
  type: object
  default: {}
- name: dependsOn
  type: string
  default: 'deploy_adf'
- name: preExecuitonScript
  type: string
  default: ''
jobs:
- job: run_integration_tests
  displayName: 'Run integration tests'
  dependsOn: ${{ parameters.dependsOn }}
  pool: ${{ parameters.agentPool }}
  timeoutInMinutes: 120

  variables:
    pythonWorkingDir: './'
    pythonVersion: '3.10'
  steps:
  - script: |
      apt-get update
      ACCEPT_EULA=Y apt-get -y install python3-dev python3-pip  python3-venv python3-setuptools python3-wheel
    displayName: 'Install python'
  - template: ../steps/vault-secrets.yaml
    parameters: 
      azureSubscriptionEndpoint: ${{ parameters.subscriptionEndpoint }}
      keyVaultName: ${{ parameters.keyvaultName }}
      azureSecreKeys: '*'
  - script: |
      ${{ parameters.preExecuitonScript }}
    displayName: 'Pre-execution  script'
    condition: and(succeeded(),ne('${{ parameters.preExecuitonScript }}', ''))
  - task: CmdLine@2
    displayName: 'Prepare Az environment'
    inputs:
      script: 'pwsh --command Install-Module -Name Az.Accounts -RequiredVersion 2.1.2 -AllowClobber -Force'
  - task: Bash@3
    displayName: 'Install Oracle Libraries'
    inputs:
      targetType: 'inline'
      script: |
        apt-get install libaio1
        curl -L -o oraclelib.zip "https://download.oracle.com/otn_software/linux/instantclient/216000/instantclient-basic-linux.x64-21.6.0.0.0dbru.zip"
        unzip oraclelib.zip
        chmod -R 755 instantclient_21_6
  - task: Bash@3
    displayName: 'Install latest sqlpackage'
    inputs:
      targetType: 'inline'
      script: |
        wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0.0_1.0.2n-1ubuntu5.13_amd64.deb"
        wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl1.0/libssl1.0-dev_1.0.2n-1ubuntu5.13_amd64.deb"
        dpkg -i libssl1.0.0_1.0.2n-1ubuntu5.13_amd64.deb
        dpkg -i libssl1.0-dev_1.0.2n-1ubuntu5.13_amd64.deb
        sed -i 's/openssl_conf = openssl_init/#openssl_conf = openssl_init/g' /etc/ssl/openssl.cnf
        sed -i 's/SECLEVEL=2/SECLEVEL=0/g' /etc/ssl/openssl.cnf
        openssl version
        echo "Config##########"
        cat /etc/ssl/openssl.cnf
        echo "File list##########"
        ls -lrt /etc/ssl/
  - task: AzureCLI@2
    inputs:
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -e
        python3 -m venv working_dir
        source working_dir/bin/activate
        python -m pip install -U pip
        python -m pip install -r requirements.txt --no-cache-dir
        make test
        deactivate
      azureSubscription: ${{ parameters.subscriptionEndpoint }}
    env:
      AZ_SERVICE_PRINCIPAL_TENANT_ID: $(AZ_SERVICE_PRINCIPAL_TENANT_ID)
      AZ_SUBSCRIPTION_ID: ${{ parameters.subscriptionEndpoint }}
      AZ_RESOURCE_GROUP_NAME: ${{parameters.resourceGroup }}
      AZ_DATAFACTORY_NAME: ${{ parameters.adfName }}
      LD_LIBRARY_PATH: "$(Build.SourcesDirectory)/instantclient_21_6"
      ${{ each pair in parameters.envMapping }}:
        ${{ pair.key }}: ${{ pair.value }}
      ${{ each pair in parameters.azureKeyMapping }}:
        ${{ pair.key }}: $(${{ pair.value }})
    displayName: 'Run integration tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/reports/test/*.xml'

  - task: PublishPipelineArtifact@1
    condition: succeededOrFailed()
    inputs:
      path: '$(System.DefaultWorkingDirectory)/reports/test/'
      artifact: 'integrationTest-$(environment)'
      displayName: 'Publish test report'
